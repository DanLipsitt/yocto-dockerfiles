name: yocto-container build and test
on:
    push:
        branches:
            - master
    pull_request:

    # Allow for manually running
    workflow_dispatch:

    # Run at 00:52 UTC every Saturday
    schedule:
        - cron: "52 0 * * 6"

jobs:
    build-test-deploy:
        runs-on: ubuntu-latest
        permissions:
            packages: write
        strategy:
            fail-fast: false
            matrix:
                distro_to_build:
                    [
                        alma-8,
                        alma-9,
                        centos-7,
                        debian-10,
                        debian-11,
                        debian-12,
                        fedora-36,
                        fedora-37,
                        fedora-38,
                        fedora-39,
                        fedora-40,
                        opensuse-15.4,
                        opensuse-15.5,
                        ubuntu-18.04,
                        ubuntu-20.04,
                        ubuntu-22.04,
                    ]
        env:
            DISTRO_TO_BUILD: ${{ matrix.distro_to_build }}
            TARGETPLATFORM: ${{ matrix.targetplatform }}
            REPO: crops/yocto
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            GHCR_USERNAME: ${{ github.actor }}
            GHCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - uses: actions/checkout@v4

            - name: Generate tag
              id: tag
              run: echo "TAG=${{ matrix.distro_to_build }}-base" >> $GITHUB_OUTPUT

            - name: Get docker dir
              id: dockerdir
              run: echo "DOCKER_DIR='find -name ${{ steps.tag.outputs.TAG}}'" >> $GITHUB_OUTPUT

            - name: Get working directory
              id: workdir
              run: echo "WORK_DIR='mktemp --tmpdir -d tmp-${{ steps.tag.outputs.TAG}}.XXX'" >> $GITHUB_OUTPUT

            - name: Setup working directory
              run: |
                  cp -r ${{ steps.dockerdir.outputs.DOCKER_DIR }} ${{ steps.workdir.outputs.WORK_DIR }}
                  WORK_DIR=${{ steps.workdir.outputs.WORK_DIR }}/${{ steps.tag.outputs.TAG }}
                  cp build-install-dumb-init.sh $workdir
                  cp install-buildtools.sh $WORK_DIR
                  cp install-buildtools-make.sh $WORK_DIR
                  echo "WORK_DIR=$WORK_DIR" >> $GITHUB_OUTPUT

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.env.GHCR_USERNAME }}
                  password: ${{ github.env.GHCR_PASSWORD }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build
              uses: docker/build-push-action@v5
              with:
                  platforms: linux/amd64,linux/arm64
                  load: true
                  pull: true
                  build-args: |
                      BASE_DISTRO=${{ matrix.base_distro }}
                      http_proxy=$http_proxy
                      HTTP_PROXY=$http_proxy
                      https_proxy=$https_proxy
                      HTTPS_PROXY=$https_proxy
                      no_proxy=$no_proxy
                      NO_PROXY=$no_proxy
                  tags: ${{ steps.tag.outputs.TAG }}

            # Build and test the images
            - name: Run build-and-test.sh
              run: ./build_container.sh

            # Deploy the images
            - name: Deploy
              if: ${{ env.DOCKER_PASSWORD != '' && env.GHCR_PASSWORD != '' }}
              run: ./deploy.sh
